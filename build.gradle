import org.grails.gradle.plugin.tasks.GrailsTask
import org.grails.gradle.plugin.tasks.GrailsTestTask

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.gebish:geb-gradle:0.10.0'
    classpath 'org.grails:grails-gradle-plugin:2.1.1'
  }
}

project.buildDir = 'target'
project.version = '0.1'
description = "Example project for automated Grails testing with BrowserStack"

apply plugin: "project-report"
apply plugin: "geb-browserstack"
apply plugin: "grails"
apply plugin: "idea"

grails {
  grailsVersion = '2.4.4'
  groovyVersion = '2.3.6'
  springLoadedVersion = '1.2.1.RELEASE'
}

def gebVersion = "0.10.0"
def seleniumVersion = "2.42.2"

browserStack {
    application 'http://www.google.com/' //3
    browsers { //4
       firefox_mac_19
       chrome_mac
       delegate."internet explorer_windows_9"
       nexus4 { //5
         capabilities browserName: "android", platform: "ANDROID", device: "Google Nexus 4"
       }
    }
    task { //6
       testClassesDir = test.testClassesDir
       testSrcDirs = test.testSrcDirs
       classpath = test.classpath
    }
    account { //7
       username = "osahorii1"
       accessKey = "vUSTRxfRvv8z9dt7gqmE"
    }
}

task functionalTests {
  group "BrowserStack Test"
}

def grailsFunctionalTest(def browserSpec) {

  def browser = browserSpec.collect { key, value -> "${key}=${value}" }.join(',')
  def name = browserSpec.collect { key, value -> value }.join('_').replaceAll(/\s+/, '')
  def output = "target/test-reports/geb/${name}"

  task "grailsFuncTest_${name}"(type: GrailsTestTask) {
    group "BrowserStack Test"

    testResultsDir = file(output)
    phases = ['functional:']
    jvmOptions.with {
//      systemProperty "geb.saucelabs.browser", browser
//      systemProperty "geb.build.reportsDir", output
    }
    
    dependsOn 'openSauceTunnelInBackground'
    finalizedBy 'closeSauceTunnel'
  }
  functionalTests.dependsOn "grailsFuncTest_${name}"

}

def browsers = [
    [ browserName: 'chrome',            platform: 'Windows 7',   version:  '36' ],
    [ browserName: 'internet explorer', platform: 'Windows 8.1', version:  '11' ]
]

//    [ browserName: 'firefox',           platform: 'Windows 7',   version:  '31' ],
//    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '8' ],
//    [ browserName: 'internet explorer', platform: 'Windows 7',   version:   '9' ],
//    [ browserName: 'internet explorer', platform: 'Windows 7',   version:  '10' ],


browsers.each { browserSpec ->
  grailsFunctionalTest(browserSpec)
}

project.tasks.withType(GrailsTask) {
  captureOutputToInfo = true
}
